{
  "address": "0x7630F0eF362303eDC9bB1cDe7D625d9DB553B392",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapV3Factory",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "uniPool",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previosGelatoDeployer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGelatoDeployer",
          "type": "address"
        }
      ],
      "name": "UpdateGelatoDeployer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "UpdatePoolImplementation",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "uniFee",
          "type": "uint24"
        },
        {
          "internalType": "uint16",
          "name": "managerFee",
          "type": "uint16"
        },
        {
          "internalType": "int24",
          "name": "lowerTick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "upperTick",
          "type": "int24"
        }
      ],
      "name": "createManagedPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "uniFee",
          "type": "uint24"
        },
        {
          "internalType": "int24",
          "name": "lowerTick",
          "type": "int24"
        },
        {
          "internalType": "int24",
          "name": "upperTick",
          "type": "int24"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gelatoDeployer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGelatoPools",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "name": "getPools",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "getProxyAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "getTokenName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gelatoDeployer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_manager_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "isPoolImmutable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        }
      ],
      "name": "makePoolsImmutable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numDeployers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        }
      ],
      "name": "numPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nextGelatoDeployer",
          "type": "address"
        }
      ],
      "name": "setGelatoDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nextImplementation",
          "type": "address"
        }
      ],
      "name": "setPoolImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        }
      ],
      "name": "upgradePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "pools",
          "type": "address[]"
        },
        {
          "internalType": "bytes[]",
          "name": "datas",
          "type": "bytes[]"
        }
      ],
      "name": "upgradePoolsAndCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x92b5ef1afe11b4409dc7983d47278c5f9b87050feed784a5da6200fd0ae9648e",
  "receipt": {
    "to": null,
    "from": "0x535CDe0F8339CD4b5bb5804f1DcaAE239920bB7D",
    "contractAddress": "0x7630F0eF362303eDC9bB1cDe7D625d9DB553B392",
    "transactionIndex": 9,
    "gasUsed": "2236389",
    "logsBloom": "0x
    "blockHash": "0xf31a739525a1196995eee3a6b9b803472c8ea78f18904d89abd56f7658cba10c",
    "transactionHash": "0x92b5ef1afe11b4409dc7983d47278c5f9b87050feed784a5da6200fd0ae9648e",
    "logs": [],
    "blockNumber": 10251301,
    "cumulativeGasUsed": "4423767",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x1F98431c8aD98523631AE4a59f267346ea31F984"
  ],
  "solcInputHash": "f202541446ad54361c0e6f64ff8746d8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapV3Factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"uniPool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previosGelatoDeployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGelatoDeployer\",\"type\":\"address\"}],\"name\":\"UpdateGelatoDeployer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"UpdatePoolImplementation\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"uniFee\",\"type\":\"uint24\"},{\"internalType\":\"uint16\",\"name\":\"managerFee\",\"type\":\"uint16\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"}],\"name\":\"createManagedPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"uniFee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"lowerTick\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"upperTick\",\"type\":\"int24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gelatoDeployer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGelatoPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"getPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getProxyAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"getTokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gelatoDeployer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_manager_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"isPoolImmutable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"}],\"name\":\"makePoolsImmutable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numDeployers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"numPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nextGelatoDeployer\",\"type\":\"address\"}],\"name\":\"setGelatoDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nextImplementation\",\"type\":\"address\"}],\"name\":\"setPoolImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"}],\"name\":\"upgradePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"datas\",\"type\":\"bytes[]\"}],\"name\":\"upgradePoolsAndCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createManagedPool(address,address,uint24,uint16,int24,int24)\":{\"params\":{\"lowerTick\":\"initial lower bound of the Uniswap V3 position\",\"managerFee\":\"proportion of earned fees that go to pool manager in Basis Points\",\"tokenA\":\"one of the tokens in the uniswap pair\",\"tokenB\":\"the other token in the uniswap pair\",\"uniFee\":\"fee tier of the uniswap pair\",\"upperTick\":\"initial upper bound of the Uniswap V3 position\"},\"returns\":{\"pool\":\"the address of the newly created G-UNI pool (proxy)\"}},\"createPool(address,address,uint24,int24,int24)\":{\"params\":{\"lowerTick\":\"initial lower bound of the Uniswap V3 position\",\"tokenA\":\"one of the tokens in the uniswap pair\",\"tokenB\":\"the other token in the uniswap pair\",\"uniFee\":\"fee tier of the uniswap pair\",\"upperTick\":\"initial upper bound of the Uniswap V3 position\"},\"returns\":{\"pool\":\"the address of the newly created G-UNI pool (proxy)\"}},\"getDeployers()\":{\"returns\":{\"_0\":\"deployers the list of deployer addresses\"}},\"getGelatoPools()\":{\"returns\":{\"_0\":\"list of Gelato managed G-UNI pool addresses\"}},\"getPools(address)\":{\"params\":{\"deployer\":\"address that has potentially deployed G-UNI pools (can return empty array)\"},\"returns\":{\"_0\":\"pools the list of G-UNI pool addresses deployed by `deployer`\"}},\"getProxyAdmin(address)\":{\"params\":{\"pool\":\"address of the G-UNI pool\"},\"returns\":{\"_0\":\"address that controls the G-UNI implementation (has power to upgrade it)\"}},\"isPoolImmutable(address)\":{\"params\":{\"pool\":\"address of the G-UNI pool\"},\"returns\":{\"_0\":\"bool signaling if pool is immutable (true) or not (false)\"}},\"manager()\":{\"details\":\"Returns the address of the current manager.\"},\"numDeployers()\":{\"returns\":{\"_0\":\"total number of G-UNI pool deployer addresses\"}},\"numPools()\":{\"returns\":{\"result\":\"total number of G-UNI pools deployed\"}},\"numPools(address)\":{\"params\":{\"deployer\":\"deployer address\"},\"returns\":{\"_0\":\"total number of G-UNI pools deployed by `deployer`\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without manager. It will not be possible to call `onlyManager` functions anymore. Can only be called by the current manager. NOTE: Renouncing ownership will leave the contract without an manager, thereby removing any functionality that is only available to the manager.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current manager.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createManagedPool(address,address,uint24,uint16,int24,int24)\":{\"notice\":\"createManagedPool creates a new instance of a G-UNI token on a specified UniswapV3Pool. The msg.sender is the initial manager of the pool and will forever be associated with the G-UNI pool as it's `deployer`\"},\"createPool(address,address,uint24,int24,int24)\":{\"notice\":\"createPool creates a new instance of a G-UNI token on a specified UniswapV3Pool. Here the manager role is immediately burned, however msg.sender will still forever be associated with the G-UNI pool as it's `deployer`\"},\"getDeployers()\":{\"notice\":\"getDeployers fetches all addresses that have deployed a G-UNI pool\"},\"getGelatoPools()\":{\"notice\":\"getGelatoPools gets all the G-UNI pools deployed by Gelato's default deployer address (since anyone can deploy and manage G-UNI pools)\"},\"getPools(address)\":{\"notice\":\"getPools fetches all the G-UNI pool addresses deployed by `deployer`\"},\"getProxyAdmin(address)\":{\"notice\":\"getProxyAdmin gets the current address who controls the underlying implementation of a G-UNI pool. For most all pools either this contract address or the zero address will be the proxyAdmin. If the admin is the zero address the pool's implementation is naturally no longer upgradable (no one owns the zero address).\"},\"isPoolImmutable(address)\":{\"notice\":\"isPoolImmutable checks if a certain G-UNI pool is \\\"immutable\\\" i.e. that the proxyAdmin is the zero address and thus the underlying implementation cannot be upgraded\"},\"numDeployers()\":{\"notice\":\"numDeployers counts the total number of G-UNI pool deployer addresses\"},\"numPools()\":{\"notice\":\"numPools counts the total number of G-UNI pools in existence\"},\"numPools(address)\":{\"notice\":\"numPools counts the total number of G-UNI pools deployed by `deployer`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GUniFactory.sol\":\"GUniFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            bytes32 lastvalue = set._values[lastIndex];\\n\\n            // Move the last value to the index where the value to delete is\\n            set._values[toDeleteIndex] = lastvalue;\\n            // Update the index for the moved value\\n            set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        require(set._values.length > index, \\\"EnumerableSet: index out of bounds\\\");\\n        return set._values[index];\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the value stored at position `index` in the set. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n}\\n\",\"keccak256\":\"0x4878ef6c288f4cef3c2a288d32cc548c648831cc55503ad3d9a581ed3b93aad9\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"contracts/GUniFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport {\\n    IUniswapV3Factory\\n} from \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\nimport {IUniswapV3TickSpacing} from \\\"./interfaces/IUniswapV3TickSpacing.sol\\\";\\nimport {IGUniFactory} from \\\"./interfaces/IGUniFactory.sol\\\";\\nimport {IGUniPoolStorage} from \\\"./interfaces/IGUniPoolStorage.sol\\\";\\nimport {GUniFactoryStorage} from \\\"./abstract/GUniFactoryStorage.sol\\\";\\nimport {EIP173Proxy} from \\\"./vendor/proxy/EIP173Proxy.sol\\\";\\nimport {IEIP173Proxy} from \\\"./interfaces/IEIP173Proxy.sol\\\";\\nimport {\\n    IERC20Metadata\\n} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {\\n    EnumerableSet\\n} from \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\n\\ncontract GUniFactory is GUniFactoryStorage, IGUniFactory {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    constructor(address _uniswapV3Factory)\\n        GUniFactoryStorage(_uniswapV3Factory)\\n    {} // solhint-disable-line no-empty-blocks\\n\\n    /// @notice createManagedPool creates a new instance of a G-UNI token on a specified\\n    /// UniswapV3Pool. The msg.sender is the initial manager of the pool and will\\n    /// forever be associated with the G-UNI pool as it's `deployer`\\n    /// @param tokenA one of the tokens in the uniswap pair\\n    /// @param tokenB the other token in the uniswap pair\\n    /// @param uniFee fee tier of the uniswap pair\\n    /// @param managerFee proportion of earned fees that go to pool manager in Basis Points\\n    /// @param lowerTick initial lower bound of the Uniswap V3 position\\n    /// @param upperTick initial upper bound of the Uniswap V3 position\\n    /// @return pool the address of the newly created G-UNI pool (proxy)\\n    function createManagedPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 uniFee,\\n        uint16 managerFee,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) external override returns (address pool) {\\n        return\\n            _createPool(\\n                tokenA,\\n                tokenB,\\n                uniFee,\\n                managerFee,\\n                lowerTick,\\n                upperTick,\\n                msg.sender\\n            );\\n    }\\n\\n    /// @notice createPool creates a new instance of a G-UNI token on a specified\\n    /// UniswapV3Pool. Here the manager role is immediately burned, however msg.sender will still\\n    /// forever be associated with the G-UNI pool as it's `deployer`\\n    /// @param tokenA one of the tokens in the uniswap pair\\n    /// @param tokenB the other token in the uniswap pair\\n    /// @param uniFee fee tier of the uniswap pair\\n    /// @param lowerTick initial lower bound of the Uniswap V3 position\\n    /// @param upperTick initial upper bound of the Uniswap V3 position\\n    /// @return pool the address of the newly created G-UNI pool (proxy)\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 uniFee,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) external override returns (address pool) {\\n        return\\n            _createPool(\\n                tokenA,\\n                tokenB,\\n                uniFee,\\n                0,\\n                lowerTick,\\n                upperTick,\\n                address(0)\\n            );\\n    }\\n\\n    function _createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 uniFee,\\n        uint16 managerFee,\\n        int24 lowerTick,\\n        int24 upperTick,\\n        address manager\\n    ) internal returns (address pool) {\\n        (address token0, address token1) = _getTokenOrder(tokenA, tokenB);\\n\\n        pool = address(new EIP173Proxy(poolImplementation, address(this), \\\"\\\"));\\n\\n        string memory name = \\\"Gelato Uniswap LP\\\";\\n        try this.getTokenName(token0, token1) returns (string memory result) {\\n            name = result;\\n        } catch {} // solhint-disable-line no-empty-blocks\\n\\n        address uniPool =\\n            IUniswapV3Factory(factory).getPool(token0, token1, uniFee);\\n        require(uniPool != address(0), \\\"uniswap pool does not exist\\\");\\n        require(\\n            _validateTickSpacing(uniPool, lowerTick, upperTick),\\n            \\\"tickSpacing mismatch\\\"\\n        );\\n\\n        IGUniPoolStorage(pool).initialize(\\n            name,\\n            \\\"G-UNI\\\",\\n            uniPool,\\n            managerFee,\\n            lowerTick,\\n            upperTick,\\n            manager\\n        );\\n        _deployers.add(msg.sender);\\n        _pools[msg.sender].add(pool);\\n        emit PoolCreated(uniPool, manager, pool);\\n    }\\n\\n    function _validateTickSpacing(\\n        address uniPool,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) internal view returns (bool) {\\n        int24 spacing = IUniswapV3TickSpacing(uniPool).tickSpacing();\\n        return\\n            lowerTick < upperTick &&\\n            lowerTick % spacing == 0 &&\\n            upperTick % spacing == 0;\\n    }\\n\\n    function getTokenName(address token0, address token1)\\n        external\\n        view\\n        returns (string memory)\\n    {\\n        string memory symbol0 = IERC20Metadata(token0).symbol();\\n        string memory symbol1 = IERC20Metadata(token1).symbol();\\n\\n        return _append(\\\"Gelato Uniswap \\\", symbol0, \\\"/\\\", symbol1, \\\" LP\\\");\\n    }\\n\\n    function upgradePools(address[] memory pools) external onlyManager {\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            IEIP173Proxy(pools[i]).upgradeTo(poolImplementation);\\n        }\\n    }\\n\\n    function upgradePoolsAndCall(address[] memory pools, bytes[] calldata datas)\\n        external\\n        onlyManager\\n    {\\n        require(pools.length == datas.length, \\\"mismatching array length\\\");\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            IEIP173Proxy(pools[i]).upgradeToAndCall(\\n                poolImplementation,\\n                datas[i]\\n            );\\n        }\\n    }\\n\\n    function makePoolsImmutable(address[] memory pools) external onlyManager {\\n        for (uint256 i = 0; i < pools.length; i++) {\\n            IEIP173Proxy(pools[i]).transferProxyAdmin(address(0));\\n        }\\n    }\\n\\n    /// @notice isPoolImmutable checks if a certain G-UNI pool is \\\"immutable\\\" i.e. that the\\n    /// proxyAdmin is the zero address and thus the underlying implementation cannot be upgraded\\n    /// @param pool address of the G-UNI pool\\n    /// @return bool signaling if pool is immutable (true) or not (false)\\n    function isPoolImmutable(address pool) external view returns (bool) {\\n        return address(0) == getProxyAdmin(pool);\\n    }\\n\\n    /// @notice getGelatoPools gets all the G-UNI pools deployed by Gelato's\\n    /// default deployer address (since anyone can deploy and manage G-UNI pools)\\n    /// @return list of Gelato managed G-UNI pool addresses\\n    function getGelatoPools() external view returns (address[] memory) {\\n        return getPools(gelatoDeployer);\\n    }\\n\\n    /// @notice getDeployers fetches all addresses that have deployed a G-UNI pool\\n    /// @return deployers the list of deployer addresses\\n    function getDeployers() public view returns (address[] memory) {\\n        uint256 length = numDeployers();\\n        address[] memory deployers = new address[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            deployers[i] = _getDeployer(i);\\n        }\\n\\n        return deployers;\\n    }\\n\\n    /// @notice getPools fetches all the G-UNI pool addresses deployed by `deployer`\\n    /// @param deployer address that has potentially deployed G-UNI pools (can return empty array)\\n    /// @return pools the list of G-UNI pool addresses deployed by `deployer`\\n    function getPools(address deployer) public view returns (address[] memory) {\\n        uint256 length = numPools(deployer);\\n        address[] memory pools = new address[](length);\\n        for (uint256 i = 0; i < length; i++) {\\n            pools[i] = _getPool(deployer, i);\\n        }\\n\\n        return pools;\\n    }\\n\\n    /// @notice numPools counts the total number of G-UNI pools in existence\\n    /// @return result total number of G-UNI pools deployed\\n    function numPools() public view returns (uint256 result) {\\n        address[] memory deployers = getDeployers();\\n        for (uint256 i = 0; i < deployers.length; i++) {\\n            result += numPools(deployers[i]);\\n        }\\n    }\\n\\n    /// @notice numDeployers counts the total number of G-UNI pool deployer addresses\\n    /// @return total number of G-UNI pool deployer addresses\\n    function numDeployers() public view returns (uint256) {\\n        return _deployers.length();\\n    }\\n\\n    /// @notice numPools counts the total number of G-UNI pools deployed by `deployer`\\n    /// @param deployer deployer address\\n    /// @return total number of G-UNI pools deployed by `deployer`\\n    function numPools(address deployer) public view returns (uint256) {\\n        return _pools[deployer].length();\\n    }\\n\\n    /// @notice getProxyAdmin gets the current address who controls the underlying implementation\\n    /// of a G-UNI pool. For most all pools either this contract address or the zero address will\\n    /// be the proxyAdmin. If the admin is the zero address the pool's implementation is naturally\\n    /// no longer upgradable (no one owns the zero address).\\n    /// @param pool address of the G-UNI pool\\n    /// @return address that controls the G-UNI implementation (has power to upgrade it)\\n    function getProxyAdmin(address pool) public view returns (address) {\\n        return IEIP173Proxy(pool).proxyAdmin();\\n    }\\n\\n    function _getDeployer(uint256 index) internal view returns (address) {\\n        return _deployers.at(index);\\n    }\\n\\n    function _getPool(address deployer, uint256 index)\\n        internal\\n        view\\n        returns (address)\\n    {\\n        return _pools[deployer].at(index);\\n    }\\n\\n    function _getTokenOrder(address tokenA, address tokenB)\\n        internal\\n        pure\\n        returns (address token0, address token1)\\n    {\\n        require(tokenA != tokenB, \\\"same token\\\");\\n        (token0, token1) = tokenA < tokenB\\n            ? (tokenA, tokenB)\\n            : (tokenB, tokenA);\\n        require(token0 != address(0), \\\"no address zero\\\");\\n    }\\n\\n    function _append(\\n        string memory a,\\n        string memory b,\\n        string memory c,\\n        string memory d,\\n        string memory e\\n    ) internal pure returns (string memory) {\\n        return string(abi.encodePacked(a, b, c, d, e));\\n    }\\n}\\n\",\"keccak256\":\"0x476238c3222674c2c192a71fed95dbf9a54ac2b0f09867b7dbae7cd56bc52942\",\"license\":\"MIT\"},\"contracts/abstract/GUniFactoryStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport {OwnableUninitialized} from \\\"./OwnableUninitialized.sol\\\";\\nimport {\\n    Initializable\\n} from \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport {\\n    EnumerableSet\\n} from \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\n\\n// solhint-disable-next-line max-states-count\\ncontract GUniFactoryStorage is\\n    OwnableUninitialized, /* XXXX DONT MODIFY ORDERING XXXX */\\n    Initializable\\n    // APPEND ADDITIONAL BASE WITH STATE VARS BELOW:\\n    // XXXX DONT MODIFY ORDERING XXXX\\n{\\n    // XXXXXXXX DO NOT MODIFY ORDERING XXXXXXXX\\n    // solhint-disable-next-line const-name-snakecase\\n    string public constant version = \\\"1.0.0\\\";\\n    address public immutable factory;\\n    address public poolImplementation;\\n    address public gelatoDeployer;\\n    EnumerableSet.AddressSet internal _deployers;\\n    mapping(address => EnumerableSet.AddressSet) internal _pools;\\n    // APPPEND ADDITIONAL STATE VARS BELOW:\\n    // XXXXXXXX DO NOT MODIFY ORDERING XXXXXXXX\\n\\n    event UpdatePoolImplementation(\\n        address previousImplementation,\\n        address newImplementation\\n    );\\n\\n    event UpdateGelatoDeployer(\\n        address previosGelatoDeployer,\\n        address newGelatoDeployer\\n    );\\n\\n    constructor(address _uniswapV3Factory) {\\n        factory = _uniswapV3Factory;\\n    }\\n\\n    function initialize(\\n        address _implementation,\\n        address _gelatoDeployer,\\n        address _manager_\\n    ) external initializer {\\n        poolImplementation = _implementation;\\n        gelatoDeployer = _gelatoDeployer;\\n        _manager = _manager_;\\n    }\\n\\n    function setPoolImplementation(address nextImplementation)\\n        external\\n        onlyManager\\n    {\\n        emit UpdatePoolImplementation(poolImplementation, nextImplementation);\\n        poolImplementation = nextImplementation;\\n    }\\n\\n    function setGelatoDeployer(address nextGelatoDeployer)\\n        external\\n        onlyManager\\n    {\\n        emit UpdateGelatoDeployer(gelatoDeployer, nextGelatoDeployer);\\n        gelatoDeployer = nextGelatoDeployer;\\n    }\\n}\\n\",\"keccak256\":\"0x81b65c0b1c660c0935d6c40310b19e62df7fdd7c0af94915afcc600bdb647fb0\",\"license\":\"MIT\"},\"contracts/abstract/OwnableUninitialized.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.4;\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an manager) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the manager account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyManager`, which can be applied to your functions to restrict their use to\\n * the manager.\\n */\\n/// @dev DO NOT ADD STATE VARIABLES - APPEND THEM TO GelatoUniV3PoolStorage\\n/// @dev DO NOT ADD BASE CONTRACTS WITH STATE VARS - APPEND THEM TO GelatoUniV3PoolStorage\\nabstract contract OwnableUninitialized {\\n    address internal _manager;\\n\\n    event OwnershipTransferred(\\n        address indexed previousManager,\\n        address indexed newManager\\n    );\\n\\n    /// @dev Initializes the contract setting the deployer as the initial manager.\\n    /// CONSTRUCTOR EMPTY - USE INITIALIZIABLE INSTEAD\\n    // solhint-disable-next-line no-empty-blocks\\n    constructor() {}\\n\\n    /**\\n     * @dev Returns the address of the current manager.\\n     */\\n    function manager() public view virtual returns (address) {\\n        return _manager;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the manager.\\n     */\\n    modifier onlyManager() {\\n        require(manager() == msg.sender, \\\"Ownable: caller is not the manager\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without manager. It will not be possible to call\\n     * `onlyManager` functions anymore. Can only be called by the current manager.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an manager,\\n     * thereby removing any functionality that is only available to the manager.\\n     */\\n    function renounceOwnership() public virtual onlyManager {\\n        emit OwnershipTransferred(_manager, address(0));\\n        _manager = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current manager.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyManager {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new manager is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_manager, newOwner);\\n        _manager = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x81d888640e2261ac5189e6061a0cf4a7f3cec5994be1859ba60ffeb961f70c01\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IEIP173Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\ninterface IEIP173Proxy {\\n    function proxyAdmin() external view returns (address);\\n\\n    function transferProxyAdmin(address newAdmin) external;\\n\\n    function upgradeTo(address newImplementation) external;\\n\\n    function upgradeToAndCall(address newImplementation, bytes calldata data)\\n        external\\n        payable;\\n}\\n\",\"keccak256\":\"0x3ff5ed428adeaaa9ba05a91b4ccec7df22cd5de80a53a7bff109543bdebe1a68\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IGUniFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface IGUniFactory {\\n    event PoolCreated(\\n        address indexed uniPool,\\n        address indexed manager,\\n        address indexed pool\\n    );\\n\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 uniFee,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) external returns (address pool);\\n\\n    function createManagedPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 uniFee,\\n        uint16 managerFee,\\n        int24 lowerTick,\\n        int24 upperTick\\n    ) external returns (address pool);\\n}\\n\",\"keccak256\":\"0xd284f6caaca9268dbe508b0ceae918eedcf96d3a7beee2b19f3b57e732deba66\",\"license\":\"MIT\"},\"contracts/interfaces/IGUniPoolStorage.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\ninterface IGUniPoolStorage {\\n    function initialize(\\n        string memory _name,\\n        string memory _symbol,\\n        address _pool,\\n        uint16 _managerFeeBPS,\\n        int24 _lowerTick,\\n        int24 _upperTick,\\n        address _manager_\\n    ) external;\\n}\\n\",\"keccak256\":\"0x39f4bc4e8684c9674e1967a3ac4ea5531f45492266586c4e6e9eb2f6d9108ced\",\"license\":\"GPL-3.0\"},\"contracts/interfaces/IUniswapV3TickSpacing.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\ninterface IUniswapV3TickSpacing {\\n    function tickSpacing() external view returns (int24);\\n}\\n\",\"keccak256\":\"0x3fa60458d5f66e28118c971b0bcf2d2ef25d28383f1ce94f2f1d4c02643cd7af\",\"license\":\"GPL-3.0\"},\"contracts/vendor/proxy/EIP173Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\nimport \\\"./Proxy.sol\\\";\\n\\ninterface ERC165 {\\n    function supportsInterface(bytes4 id) external view returns (bool);\\n}\\n\\n///@notice Proxy implementing EIP173 for ownership management\\ncontract EIP173Proxy is Proxy {\\n    // ////////////////////////// EVENTS ///////////////////////////////////////////////////////////////////////\\n\\n    event ProxyAdminTransferred(\\n        address indexed previousAdmin,\\n        address indexed newAdmin\\n    );\\n\\n    // /////////////////////// CONSTRUCTOR //////////////////////////////////////////////////////////////////////\\n\\n    constructor(\\n        address implementationAddress,\\n        address adminAddress,\\n        bytes memory data\\n    ) payable {\\n        _setImplementation(implementationAddress, data);\\n        _setProxyAdmin(adminAddress);\\n    }\\n\\n    // ///////////////////// EXTERNAL ///////////////////////////////////////////////////////////////////////////\\n\\n    function proxyAdmin() external view returns (address) {\\n        return _proxyAdmin();\\n    }\\n\\n    function supportsInterface(bytes4 id) external view returns (bool) {\\n        if (id == 0x01ffc9a7 || id == 0x7f5828d0) {\\n            return true;\\n        }\\n        if (id == 0xFFFFFFFF) {\\n            return false;\\n        }\\n\\n        ERC165 implementation;\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            implementation := sload(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\\n            )\\n        }\\n\\n        // Technically this is not standard compliant as ERC-165 require 30,000 gas which that call cannot ensure\\n        // because it is itself inside `supportsInterface` that might only get 30,000 gas.\\n        // In practise this is unlikely to be an issue.\\n        try implementation.supportsInterface(id) returns (bool support) {\\n            return support;\\n        } catch {\\n            return false;\\n        }\\n    }\\n\\n    function transferProxyAdmin(address newAdmin) external onlyProxyAdmin {\\n        _setProxyAdmin(newAdmin);\\n    }\\n\\n    function upgradeTo(address newImplementation) external onlyProxyAdmin {\\n        _setImplementation(newImplementation, \\\"\\\");\\n    }\\n\\n    function upgradeToAndCall(address newImplementation, bytes calldata data)\\n        external\\n        payable\\n        onlyProxyAdmin\\n    {\\n        _setImplementation(newImplementation, data);\\n    }\\n\\n    // /////////////////////// MODIFIERS ////////////////////////////////////////////////////////////////////////\\n\\n    modifier onlyProxyAdmin() {\\n        require(msg.sender == _proxyAdmin(), \\\"NOT_AUTHORIZED\\\");\\n        _;\\n    }\\n\\n    // ///////////////////////// INTERNAL //////////////////////////////////////////////////////////////////////\\n\\n    function _proxyAdmin() internal view returns (address adminAddress) {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            adminAddress := sload(\\n                0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\\n            )\\n        }\\n    }\\n\\n    function _setProxyAdmin(address newAdmin) internal {\\n        address previousAdmin = _proxyAdmin();\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            sstore(\\n                0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103,\\n                newAdmin\\n            )\\n        }\\n        emit ProxyAdminTransferred(previousAdmin, newAdmin);\\n    }\\n}\\n\",\"keccak256\":\"0x4ad41656a53bc38d766197d9974be4be70f506b1d1f78def2c3726e8d580a3f5\",\"license\":\"GPL-3.0\"},\"contracts/vendor/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity 0.8.4;\\n\\n// EIP-1967\\nabstract contract Proxy {\\n    // /////////////////////// EVENTS ///////////////////////////////////////////////////////////////////////////\\n\\n    event ProxyImplementationUpdated(\\n        address indexed previousImplementation,\\n        address indexed newImplementation\\n    );\\n\\n    // ///////////////////// EXTERNAL ///////////////////////////////////////////////////////////////////////////\\n\\n    // prettier-ignore\\n    receive() external payable virtual {\\n        revert(\\\"ETHER_REJECTED\\\"); // explicit reject by default\\n    }\\n\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    // ///////////////////////// INTERNAL //////////////////////////////////////////////////////////////////////\\n\\n    function _fallback() internal {\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            let implementationAddress := sload(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\\n            )\\n            calldatacopy(0x0, 0x0, calldatasize())\\n            let success := delegatecall(\\n                gas(),\\n                implementationAddress,\\n                0x0,\\n                calldatasize(),\\n                0,\\n                0\\n            )\\n            let retSz := returndatasize()\\n            returndatacopy(0, 0, retSz)\\n            switch success\\n                case 0 {\\n                    revert(0, retSz)\\n                }\\n                default {\\n                    return(0, retSz)\\n                }\\n        }\\n    }\\n\\n    function _setImplementation(address newImplementation, bytes memory data)\\n        internal\\n    {\\n        address previousImplementation;\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            previousImplementation := sload(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\\n            )\\n        }\\n\\n        // solhint-disable-next-line security/no-inline-assembly\\n        assembly {\\n            sstore(\\n                0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc,\\n                newImplementation\\n            )\\n        }\\n\\n        emit ProxyImplementationUpdated(\\n            previousImplementation,\\n            newImplementation\\n        );\\n\\n        if (data.length > 0) {\\n            (bool success, ) = newImplementation.delegatecall(data);\\n            if (!success) {\\n                assembly {\\n                    // This assembly ensure the revert contains the exact string data\\n                    let returnDataSize := returndatasize()\\n                    returndatacopy(0, 0, returnDataSize)\\n                    revert(0, returnDataSize)\\n                }\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x00dbb59cf486ff9a2930fb588ef70d761dbf439aa05d48ef0001a0448769ec11\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161282538038061282583398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61278e6100976000396000818161031201526110e9015261278e6000f3fe60806040523480156200001157600080fd5b5060043610620001425760003560e01c8063088933281462000147578063098eddb114620001605780630dfc574b146200017d578063260fc2b8146200019457806335c62bc214620001ab57806340aee04114620001b557806342f5de9914620001cc578063481c6a7514620001e357806354fd4d5014620001fc578063562b810314620002305780635c39f4671462000249578063607c12b51462000260578063715018a6146200026a57806383c60ac4146200027457806386238765146200028b57806395d807f1146200029f578063a958b89514620002c7578063bd30dfb914620002de578063c0c53b8b14620002f5578063c45a0155146200030c578063cefa77991462000334578063d6f748981462000348578063f2fde38b146200035f578063f3b7dead1462000376575b600080fd5b6200015e6200015836600462001699565b6200038d565b005b6200016a62000435565b6040519081526020015b60405180910390f35b6200015e6200018e366004620018ad565b62000448565b6200015e620001a53660046200186f565b620005c8565b6200016a620006ae565b6200015e620001c63660046200186f565b62000725565b6200016a620001dd36600462001699565b6200080f565b620001ed62000838565b60405162000174919062001aa4565b62000221604051806040016040528060058152602001640312e302e360dc1b81525081565b60405162000174919062001b61565b6200023a62000847565b60405162000174919062001b12565b6200023a6200025a36600462001699565b6200085c565b6200023a62000931565b6200015e62000a03565b620001ed62000285366004620017de565b62000a70565b600254620001ed906001600160a01b031681565b620002b6620002b036600462001699565b62000a8e565b604051901515815260200162000174565b620001ed620002d836600462001765565b62000aab565b62000221620002ef366004620016d7565b62000aca565b6200015e6200030636600462001714565b62000c39565b620001ed7f000000000000000000000000000000000000000000000000000000000000000081565b600154620001ed906001600160a01b031681565b6200015e6200035936600462001699565b62000d4a565b6200015e6200037036600462001699565b62000de9565b620001ed6200038736600462001699565b62000ed0565b336200039862000838565b6001600160a01b031614620003ca5760405162461bcd60e51b8152600401620003c19062001beb565b60405180910390fd5b6002546040517fb316078581b0eaf0714b47d13192560506acc3e23b5bf3b72d27248f173c9085916200040b916001600160a01b0390911690849062001ab8565b60405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b600062000443600362000f47565b905090565b336200045362000838565b6001600160a01b0316146200047c5760405162461bcd60e51b8152600401620003c19062001beb565b82518114620004c95760405162461bcd60e51b81526020600482015260186024820152770dad2e6dac2e8c6d0d2dcce40c2e4e4c2f240d8cadccee8d60431b6044820152606401620003c1565b60005b8351811015620005c257838181518110620004f757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316634f1ef286600160009054906101000a90046001600160a01b03168585858181106200054457634e487b7160e01b600052603260045260246000fd5b905060200281019062000558919062001c2d565b6040518463ffffffff1660e01b8152600401620005789392919062001ad2565b600060405180830381600087803b1580156200059357600080fd5b505af1158015620005a8573d6000803e3d6000fd5b505050508080620005b99062001cf1565b915050620004cc565b50505050565b33620005d362000838565b6001600160a01b031614620005fc5760405162461bcd60e51b8152600401620003c19062001beb565b60005b8151811015620006aa578181815181106200062a57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316638356ca4f60006040518263ffffffff1660e01b815260040162000660919062001aa4565b600060405180830381600087803b1580156200067b57600080fd5b505af115801562000690573d6000803e3d6000fd5b505050508080620006a19062001cf1565b915050620005ff565b5050565b600080620006bb62000931565b905060005b81518110156200072057620006fd828281518110620006ef57634e487b7160e01b600052603260045260246000fd5b60200260200101516200080f565b62000709908462001ca7565b925080620007178162001cf1565b915050620006c0565b505090565b336200073062000838565b6001600160a01b031614620007595760405162461bcd60e51b8152600401620003c19062001beb565b60005b8151811015620006aa578181815181106200078757634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600154604051631b2ce7f360e11b81526001600160a01b0392831692633659cfe692620007c59291169060040162001aa4565b600060405180830381600087803b158015620007e057600080fd5b505af1158015620007f5573d6000803e3d6000fd5b505050508080620008069062001cf1565b9150506200075c565b6001600160a01b0381166000908152600560205260408120620008329062000f47565b92915050565b6000546001600160a01b031690565b60025460609062000443906001600160a01b03165b606060006200086b836200080f565b90506000816001600160401b038111156200089657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015620008c0578160200160208202803683370190505b50905060005b828110156200092957620008db858262000f52565b828281518110620008fc57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015280620009208162001cf1565b915050620008c6565b509392505050565b606060006200093f62000435565b90506000816001600160401b038111156200096a57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801562000994578160200160208202803683370190505b50905060005b82811015620009fc57620009ae8162000f7d565b828281518110620009cf57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015280620009f38162001cf1565b9150506200099a565b5092915050565b3362000a0e62000838565b6001600160a01b03161462000a375760405162461bcd60e51b8152600401620003c19062001beb565b600080546040516001600160a01b039091169060008051602062002739833981519152908390a3600080546001600160a01b0319169055565b600062000a838787878787873362000f8c565b979650505050505050565b600062000a9b8262000ed0565b6001600160a01b03161592915050565b600062000ac086868660008787600062000f8c565b9695505050505050565b60606000836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000b0857600080fd5b505afa15801562000b1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b47919081019062001967565b90506000836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000b8557600080fd5b505afa15801562000b9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bc4919081019062001967565b905062000c306040518060400160405280600f81526020016e023b2b630ba37902ab734b9bbb0b81608d1b81525083604051806040016040528060018152602001602f60f81b81525084604051806040016040528060038152602001620204c560ec1b8152506200130b565b95945050505050565b600054600160a81b900460ff1662000c5f57600054600160a01b900460ff161562000c63565b303b155b62000cc85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620003c1565b600054600160a81b900460ff1615801562000cf3576000805461ffff60a01b191661010160a01b1790555b600180546001600160a01b038087166001600160a01b0319928316179092556002805486841690831617905560008054928516929091169190911790558015620005c2576000805460ff60a81b1916905550505050565b3362000d5562000838565b6001600160a01b03161462000d7e5760405162461bcd60e51b8152600401620003c19062001beb565b6001546040517f0617fd31aa5ab95ec80eefc1eb61a2c477aa419d1d761b4e46f5f077e47852aa9162000dbf916001600160a01b0390911690849062001ab8565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b3362000df462000838565b6001600160a01b03161462000e1d5760405162461bcd60e51b8152600401620003c19062001beb565b6001600160a01b03811662000e865760405162461bcd60e51b815260206004820152602860248201527f4f776e61626c653a206e6577206d616e6167657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401620003c1565b600080546040516001600160a01b03808516939216916000805160206200273983398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316633e47158c6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000f0c57600080fd5b505afa15801562000f21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008329190620016b8565b600062000832825490565b6001600160a01b038216600090815260056020526040812062000f76908362001342565b9392505050565b60006200083260038362001342565b600080600062000f9d8a8a62001350565b6001546040519294509092506001600160a01b031690309062000fc090620015dc565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f08015801562001003573d6000803e3d6000fd5b506040805180820182526011815270047656c61746f20556e6973776170204c5607c1b6020820152905163bd30dfb960e01b815291945090309063bd30dfb99062001055908690869060040162001ab8565b60006040518083038186803b1580156200106e57600080fd5b505afa925050508015620010a657506040513d6000823e601f3d908101601f19168201604052620010a3919081019062001967565b60015b620010b157620010b4565b90505b604051630b4c774160e11b81526001600160a01b038481166004830152838116602483015262ffffff8b1660448301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631698ee829060640160206040518083038186803b1580156200112e57600080fd5b505afa15801562001143573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011699190620016b8565b90506001600160a01b038116620011c15760405162461bcd60e51b815260206004820152601b60248201527a1d5b9a5cddd85c081c1bdbdb08191bd95cc81b9bdd08195e1a5cdd602a1b6044820152606401620003c1565b620011ce8189896200141f565b620012135760405162461bcd60e51b81526020600482015260146024820152730e8d2c6d6a6e0c2c6d2dcce40dad2e6dac2e8c6d60631b6044820152606401620003c1565b60405163e25e15e360e01b81526001600160a01b0386169063e25e15e3906200124b90859085908e908e908e908e9060040162001b76565b600060405180830381600087803b1580156200126657600080fd5b505af11580156200127b573d6000803e3d6000fd5b5050505062001295336003620014dc90919063ffffffff16565b50336000908152600560205260409020620012b19086620014dc565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b60405160405180910390a450505050979650505050505050565b606085858585856040516020016200132895949392919062001a2f565b604051602081830303815290604052905095945050505050565b600062000f768383620014f3565b600080826001600160a01b0316846001600160a01b03161415620013a45760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b6044820152606401620003c1565b826001600160a01b0316846001600160a01b031610620013c6578284620013c9565b83835b90925090506001600160a01b038216620014185760405162461bcd60e51b815260206004820152600f60248201526e6e6f2061646472657373207a65726f60881b6044820152606401620003c1565b9250929050565b600080846001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200145c57600080fd5b505afa15801562001471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001497919062001948565b90508260020b8460020b128015620014bb5750620014b6818562001d0f565b60020b155b801562000c305750620014cf818462001d0f565b60020b1595945050505050565b600062000f76836001600160a01b0384166200158a565b81546000908210620015535760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401620003c1565b8260000182815481106200157757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000818152600183016020526040812054620015d35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000832565b50600062000832565b6109a58062001d9483390190565b600082601f830112620015fb578081fd5b813560206001600160401b0382111562001619576200161962001d54565b8160051b6200162a82820162001c74565b83815282810190868401838801850189101562001645578687fd5b8693505b85841015620016745780356200165f8162001d6a565b83526001939093019291840191840162001649565b50979650505050505050565b803562ffffff811681146200169457600080fd5b919050565b600060208284031215620016ab578081fd5b813562000f768162001d6a565b600060208284031215620016ca578081fd5b815162000f768162001d6a565b60008060408385031215620016ea578081fd5b8235620016f78162001d6a565b91506020830135620017098162001d6a565b809150509250929050565b60008060006060848603121562001729578081fd5b8335620017368162001d6a565b92506020840135620017488162001d6a565b915060408401356200175a8162001d6a565b809150509250925092565b600080600080600060a086880312156200177d578081fd5b85356200178a8162001d6a565b945060208601356200179c8162001d6a565b9350620017ac6040870162001680565b92506060860135620017be8162001d83565b91506080860135620017d08162001d83565b809150509295509295909350565b60008060008060008060c08789031215620017f7578081fd5b8635620018048162001d6a565b95506020870135620018168162001d6a565b9450620018266040880162001680565b9350606087013561ffff811681146200183d578182fd5b925060808701356200184f8162001d83565b915060a0870135620018618162001d83565b809150509295509295509295565b60006020828403121562001881578081fd5b81356001600160401b0381111562001897578182fd5b620018a584828501620015ea565b949350505050565b600080600060408486031215620018c2578283fd5b83356001600160401b0380821115620018d9578485fd5b620018e787838801620015ea565b94506020860135915080821115620018fd578384fd5b818601915086601f83011262001911578384fd5b81358181111562001920578485fd5b8760208260051b850101111562001935578485fd5b6020830194508093505050509250925092565b6000602082840312156200195a578081fd5b815162000f768162001d83565b60006020828403121562001979578081fd5b81516001600160401b038082111562001990578283fd5b818401915084601f830112620019a4578283fd5b815181811115620019b957620019b962001d54565b620019ce601f8201601f191660200162001c74565b9150808252856020828501011115620019e5578384fd5b620019f881602084016020860162001cc2565b50949350505050565b6000815180845262001a1b81602086016020860162001cc2565b601f01601f19169290920160200192915050565b6000865162001a43818460208b0162001cc2565b86519083019062001a59818360208b0162001cc2565b865191019062001a6e818360208a0162001cc2565b855191019062001a8381836020890162001cc2565b845191019062001a9881836020880162001cc2565b01979650505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b6020808252825182820181905260009190848201906040850190845b8181101562001b555783516001600160a01b03168352928401929184019160010162001b2e565b50909695505050505050565b60208152600062000f76602083018462001a01565b60e08152600062001b8b60e083018962001a01565b82810360208401526005815264472d554e4960d81b60208201526040810191505060018060a01b03808816604084015261ffff871660608401528560020b60808401528460020b60a084015280841660c084015250979650505050505050565b60208082526022908201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206d616e616760408201526132b960f11b606082015260800190565b6000808335601e1984360301811262001c44578283fd5b8301803591506001600160401b0382111562001c5e578283fd5b6020019150368190038213156200141857600080fd5b604051601f8201601f191681016001600160401b038111828210171562001c9f5762001c9f62001d54565b604052919050565b6000821982111562001cbd5762001cbd62001d3e565b500190565b60005b8381101562001cdf57818101518382015260200162001cc5565b83811115620005c25750506000910152565b600060001982141562001d085762001d0862001d3e565b5060010190565b60008260020b8062001d2f57634e487b7160e01b82526012600452602482fd5b808360020b0791505092915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462001d8057600080fd5b50565b8060020b811462001d8057600080fdfe60806040526040516109a53803806109a5833981016040819052610022916101a4565b61002c838261003d565b61003582610119565b5050506102ce565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610114576000836001600160a01b0316836040516100be9190610270565b600060405180830381855af49150503d80600081146100f9576040519150601f19603f3d011682016040523d82523d6000602084013e6100fe565b606091505b5050905080610112573d806000803e806000fd5b505b505050565b60006101316000805160206109858339815191525490565b90508160008051602061098583398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80516001600160a01b038116811461019f57600080fd5b919050565b6000806000606084860312156101b8578283fd5b6101c184610188565b92506101cf60208501610188565b60408501519092506001600160401b03808211156101eb578283fd5b818601915086601f8301126101fe578283fd5b815181811115610210576102106102b8565b604051601f8201601f19908116603f01168101908382118183101715610238576102386102b8565b81604052828152896020848701011115610250578586fd5b61026183602083016020880161028c565b80955050505050509250925092565b6000825161028281846020870161028c565b9190910192915050565b60005b838110156102a757818101518382015260200161028f565b838111156101125750506000910152565b634e487b7160e01b600052604160045260246000fd5b6106a8806102dd6000396000f3fe60806040526004361061004e5760003560e01c806301ffc9a71461009b5780633659cfe6146100d05780633e47158c146100f05780634f1ef2861461011d5780638356ca4f1461013057610091565b366100915760405162461bcd60e51b815260206004820152600e60248201526d115512115497d491529150d5115160921b60448201526064015b60405180910390fd5b610099610150565b005b3480156100a757600080fd5b506100bb6100b63660046105a9565b610189565b60405190151581526020015b60405180910390f35b3480156100dc57600080fd5b506100996100eb3660046104f2565b61027e565b3480156100fc57600080fd5b506101056102d2565b6040516001600160a01b0390911681526020016100c7565b61009961012b36600461050c565b6102e1565b34801561013c57600080fd5b5061009961014b3660046104f2565b61035e565b6000805160206106538339815191525460003681823780813683855af491503d8082833e82801561017f578183f35b8183fd5b50505050565b60006301ffc9a760e01b6001600160e01b0319831614806101ba57506307f5828d60e41b6001600160e01b03198316145b156101c757506001919050565b6001600160e01b031980831614156101e157506000919050565b600080516020610653833981519152546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b038216906301ffc9a79060240160206040518083038186803b15801561023a57600080fd5b505afa92505050801561026a575060408051601f3d908101601f1916820190925261026791810190610589565b60015b6102775750600092915050565b9392505050565b61028661039f565b6001600160a01b0316336001600160a01b0316146102b65760405162461bcd60e51b81526004016100889061060a565b6102cf81604051806020016040528060008152506103b2565b50565b60006102dc61039f565b905090565b6102e961039f565b6001600160a01b0316336001600160a01b0316146103195760405162461bcd60e51b81526004016100889061060a565b6103598383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103b292505050565b505050565b61036661039f565b6001600160a01b0316336001600160a01b0316146103965760405162461bcd60e51b81526004016100889061060a565b6102cf81610475565b6000805160206106338339815191525490565b6000805160206106538339815191528054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610359576000836001600160a01b03168360405161042191906105d1565b600060405180830381855af49150503d806000811461045c576040519150601f19603f3d011682016040523d82523d6000602084013e610461565b606091505b5050905080610183573d806000803e806000fd5b600061047f61039f565b90508160008051602061063383398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80356001600160a01b03811681146104ed57600080fd5b919050565b600060208284031215610503578081fd5b610277826104d6565b600080600060408486031215610520578182fd5b610529846104d6565b925060208401356001600160401b0380821115610544578384fd5b818601915086601f830112610557578384fd5b813581811115610565578485fd5b876020828501011115610576578485fd5b6020830194508093505050509250925092565b60006020828403121561059a578081fd5b81518015158114610277578182fd5b6000602082840312156105ba578081fd5b81356001600160e01b031981168114610277578182fd5b60008251815b818110156105f157602081860181015185830152016105d7565b818111156105ff5782828501525b509190910192915050565b6020808252600e908201526d1393d517d055551213d49256915160921b60408201526060019056feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220730effc08e7ae1c19f69ae08dd52de483b649ded49db9428e4ced9875431474364736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122088c8024b57a9ea364c515edf7cb3b8239ebcb8fcdc986d7e2b8e467f1b9b6a9864736f6c63430008040033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620001425760003560e01c8063088933281462000147578063098eddb114620001605780630dfc574b146200017d578063260fc2b8146200019457806335c62bc214620001ab57806340aee04114620001b557806342f5de9914620001cc578063481c6a7514620001e357806354fd4d5014620001fc578063562b810314620002305780635c39f4671462000249578063607c12b51462000260578063715018a6146200026a57806383c60ac4146200027457806386238765146200028b57806395d807f1146200029f578063a958b89514620002c7578063bd30dfb914620002de578063c0c53b8b14620002f5578063c45a0155146200030c578063cefa77991462000334578063d6f748981462000348578063f2fde38b146200035f578063f3b7dead1462000376575b600080fd5b6200015e6200015836600462001699565b6200038d565b005b6200016a62000435565b6040519081526020015b60405180910390f35b6200015e6200018e366004620018ad565b62000448565b6200015e620001a53660046200186f565b620005c8565b6200016a620006ae565b6200015e620001c63660046200186f565b62000725565b6200016a620001dd36600462001699565b6200080f565b620001ed62000838565b60405162000174919062001aa4565b62000221604051806040016040528060058152602001640312e302e360dc1b81525081565b60405162000174919062001b61565b6200023a62000847565b60405162000174919062001b12565b6200023a6200025a36600462001699565b6200085c565b6200023a62000931565b6200015e62000a03565b620001ed62000285366004620017de565b62000a70565b600254620001ed906001600160a01b031681565b620002b6620002b036600462001699565b62000a8e565b604051901515815260200162000174565b620001ed620002d836600462001765565b62000aab565b62000221620002ef366004620016d7565b62000aca565b6200015e6200030636600462001714565b62000c39565b620001ed7f000000000000000000000000000000000000000000000000000000000000000081565b600154620001ed906001600160a01b031681565b6200015e6200035936600462001699565b62000d4a565b6200015e6200037036600462001699565b62000de9565b620001ed6200038736600462001699565b62000ed0565b336200039862000838565b6001600160a01b031614620003ca5760405162461bcd60e51b8152600401620003c19062001beb565b60405180910390fd5b6002546040517fb316078581b0eaf0714b47d13192560506acc3e23b5bf3b72d27248f173c9085916200040b916001600160a01b0390911690849062001ab8565b60405180910390a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b600062000443600362000f47565b905090565b336200045362000838565b6001600160a01b0316146200047c5760405162461bcd60e51b8152600401620003c19062001beb565b82518114620004c95760405162461bcd60e51b81526020600482015260186024820152770dad2e6dac2e8c6d0d2dcce40c2e4e4c2f240d8cadccee8d60431b6044820152606401620003c1565b60005b8351811015620005c257838181518110620004f757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316634f1ef286600160009054906101000a90046001600160a01b03168585858181106200054457634e487b7160e01b600052603260045260246000fd5b905060200281019062000558919062001c2d565b6040518463ffffffff1660e01b8152600401620005789392919062001ad2565b600060405180830381600087803b1580156200059357600080fd5b505af1158015620005a8573d6000803e3d6000fd5b505050508080620005b99062001cf1565b915050620004cc565b50505050565b33620005d362000838565b6001600160a01b031614620005fc5760405162461bcd60e51b8152600401620003c19062001beb565b60005b8151811015620006aa578181815181106200062a57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b0316638356ca4f60006040518263ffffffff1660e01b815260040162000660919062001aa4565b600060405180830381600087803b1580156200067b57600080fd5b505af115801562000690573d6000803e3d6000fd5b505050508080620006a19062001cf1565b915050620005ff565b5050565b600080620006bb62000931565b905060005b81518110156200072057620006fd828281518110620006ef57634e487b7160e01b600052603260045260246000fd5b60200260200101516200080f565b62000709908462001ca7565b925080620007178162001cf1565b915050620006c0565b505090565b336200073062000838565b6001600160a01b031614620007595760405162461bcd60e51b8152600401620003c19062001beb565b60005b8151811015620006aa578181815181106200078757634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600154604051631b2ce7f360e11b81526001600160a01b0392831692633659cfe692620007c59291169060040162001aa4565b600060405180830381600087803b158015620007e057600080fd5b505af1158015620007f5573d6000803e3d6000fd5b505050508080620008069062001cf1565b9150506200075c565b6001600160a01b0381166000908152600560205260408120620008329062000f47565b92915050565b6000546001600160a01b031690565b60025460609062000443906001600160a01b03165b606060006200086b836200080f565b90506000816001600160401b038111156200089657634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015620008c0578160200160208202803683370190505b50905060005b828110156200092957620008db858262000f52565b828281518110620008fc57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015280620009208162001cf1565b915050620008c6565b509392505050565b606060006200093f62000435565b90506000816001600160401b038111156200096a57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801562000994578160200160208202803683370190505b50905060005b82811015620009fc57620009ae8162000f7d565b828281518110620009cf57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015280620009f38162001cf1565b9150506200099a565b5092915050565b3362000a0e62000838565b6001600160a01b03161462000a375760405162461bcd60e51b8152600401620003c19062001beb565b600080546040516001600160a01b039091169060008051602062002739833981519152908390a3600080546001600160a01b0319169055565b600062000a838787878787873362000f8c565b979650505050505050565b600062000a9b8262000ed0565b6001600160a01b03161592915050565b600062000ac086868660008787600062000f8c565b9695505050505050565b60606000836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000b0857600080fd5b505afa15801562000b1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b47919081019062001967565b90506000836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801562000b8557600080fd5b505afa15801562000b9a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bc4919081019062001967565b905062000c306040518060400160405280600f81526020016e023b2b630ba37902ab734b9bbb0b81608d1b81525083604051806040016040528060018152602001602f60f81b81525084604051806040016040528060038152602001620204c560ec1b8152506200130b565b95945050505050565b600054600160a81b900460ff1662000c5f57600054600160a01b900460ff161562000c63565b303b155b62000cc85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620003c1565b600054600160a81b900460ff1615801562000cf3576000805461ffff60a01b191661010160a01b1790555b600180546001600160a01b038087166001600160a01b0319928316179092556002805486841690831617905560008054928516929091169190911790558015620005c2576000805460ff60a81b1916905550505050565b3362000d5562000838565b6001600160a01b03161462000d7e5760405162461bcd60e51b8152600401620003c19062001beb565b6001546040517f0617fd31aa5ab95ec80eefc1eb61a2c477aa419d1d761b4e46f5f077e47852aa9162000dbf916001600160a01b0390911690849062001ab8565b60405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b3362000df462000838565b6001600160a01b03161462000e1d5760405162461bcd60e51b8152600401620003c19062001beb565b6001600160a01b03811662000e865760405162461bcd60e51b815260206004820152602860248201527f4f776e61626c653a206e6577206d616e6167657220697320746865207a65726f604482015267206164647265737360c01b6064820152608401620003c1565b600080546040516001600160a01b03808516939216916000805160206200273983398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316633e47158c6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000f0c57600080fd5b505afa15801562000f21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008329190620016b8565b600062000832825490565b6001600160a01b038216600090815260056020526040812062000f76908362001342565b9392505050565b60006200083260038362001342565b600080600062000f9d8a8a62001350565b6001546040519294509092506001600160a01b031690309062000fc090620015dc565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f08015801562001003573d6000803e3d6000fd5b506040805180820182526011815270047656c61746f20556e6973776170204c5607c1b6020820152905163bd30dfb960e01b815291945090309063bd30dfb99062001055908690869060040162001ab8565b60006040518083038186803b1580156200106e57600080fd5b505afa925050508015620010a657506040513d6000823e601f3d908101601f19168201604052620010a3919081019062001967565b60015b620010b157620010b4565b90505b604051630b4c774160e11b81526001600160a01b038481166004830152838116602483015262ffffff8b1660448301526000917f000000000000000000000000000000000000000000000000000000000000000090911690631698ee829060640160206040518083038186803b1580156200112e57600080fd5b505afa15801562001143573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011699190620016b8565b90506001600160a01b038116620011c15760405162461bcd60e51b815260206004820152601b60248201527a1d5b9a5cddd85c081c1bdbdb08191bd95cc81b9bdd08195e1a5cdd602a1b6044820152606401620003c1565b620011ce8189896200141f565b620012135760405162461bcd60e51b81526020600482015260146024820152730e8d2c6d6a6e0c2c6d2dcce40dad2e6dac2e8c6d60631b6044820152606401620003c1565b60405163e25e15e360e01b81526001600160a01b0386169063e25e15e3906200124b90859085908e908e908e908e9060040162001b76565b600060405180830381600087803b1580156200126657600080fd5b505af11580156200127b573d6000803e3d6000fd5b5050505062001295336003620014dc90919063ffffffff16565b50336000908152600560205260409020620012b19086620014dc565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b60405160405180910390a450505050979650505050505050565b606085858585856040516020016200132895949392919062001a2f565b604051602081830303815290604052905095945050505050565b600062000f768383620014f3565b600080826001600160a01b0316846001600160a01b03161415620013a45760405162461bcd60e51b815260206004820152600a60248201526939b0b6b2903a37b5b2b760b11b6044820152606401620003c1565b826001600160a01b0316846001600160a01b031610620013c6578284620013c9565b83835b90925090506001600160a01b038216620014185760405162461bcd60e51b815260206004820152600f60248201526e6e6f2061646472657373207a65726f60881b6044820152606401620003c1565b9250929050565b600080846001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200145c57600080fd5b505afa15801562001471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001497919062001948565b90508260020b8460020b128015620014bb5750620014b6818562001d0f565b60020b155b801562000c305750620014cf818462001d0f565b60020b1595945050505050565b600062000f76836001600160a01b0384166200158a565b81546000908210620015535760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b6064820152608401620003c1565b8260000182815481106200157757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b6000818152600183016020526040812054620015d35750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000832565b50600062000832565b6109a58062001d9483390190565b600082601f830112620015fb578081fd5b813560206001600160401b0382111562001619576200161962001d54565b8160051b6200162a82820162001c74565b83815282810190868401838801850189101562001645578687fd5b8693505b85841015620016745780356200165f8162001d6a565b83526001939093019291840191840162001649565b50979650505050505050565b803562ffffff811681146200169457600080fd5b919050565b600060208284031215620016ab578081fd5b813562000f768162001d6a565b600060208284031215620016ca578081fd5b815162000f768162001d6a565b60008060408385031215620016ea578081fd5b8235620016f78162001d6a565b91506020830135620017098162001d6a565b809150509250929050565b60008060006060848603121562001729578081fd5b8335620017368162001d6a565b92506020840135620017488162001d6a565b915060408401356200175a8162001d6a565b809150509250925092565b600080600080600060a086880312156200177d578081fd5b85356200178a8162001d6a565b945060208601356200179c8162001d6a565b9350620017ac6040870162001680565b92506060860135620017be8162001d83565b91506080860135620017d08162001d83565b809150509295509295909350565b60008060008060008060c08789031215620017f7578081fd5b8635620018048162001d6a565b95506020870135620018168162001d6a565b9450620018266040880162001680565b9350606087013561ffff811681146200183d578182fd5b925060808701356200184f8162001d83565b915060a0870135620018618162001d83565b809150509295509295509295565b60006020828403121562001881578081fd5b81356001600160401b0381111562001897578182fd5b620018a584828501620015ea565b949350505050565b600080600060408486031215620018c2578283fd5b83356001600160401b0380821115620018d9578485fd5b620018e787838801620015ea565b94506020860135915080821115620018fd578384fd5b818601915086601f83011262001911578384fd5b81358181111562001920578485fd5b8760208260051b850101111562001935578485fd5b6020830194508093505050509250925092565b6000602082840312156200195a578081fd5b815162000f768162001d83565b60006020828403121562001979578081fd5b81516001600160401b038082111562001990578283fd5b818401915084601f830112620019a4578283fd5b815181811115620019b957620019b962001d54565b620019ce601f8201601f191660200162001c74565b9150808252856020828501011115620019e5578384fd5b620019f881602084016020860162001cc2565b50949350505050565b6000815180845262001a1b81602086016020860162001cc2565b601f01601f19169290920160200192915050565b6000865162001a43818460208b0162001cc2565b86519083019062001a59818360208b0162001cc2565b865191019062001a6e818360208a0162001cc2565b855191019062001a8381836020890162001cc2565b845191019062001a9881836020880162001cc2565b01979650505050505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b6020808252825182820181905260009190848201906040850190845b8181101562001b555783516001600160a01b03168352928401929184019160010162001b2e565b50909695505050505050565b60208152600062000f76602083018462001a01565b60e08152600062001b8b60e083018962001a01565b82810360208401526005815264472d554e4960d81b60208201526040810191505060018060a01b03808816604084015261ffff871660608401528560020b60808401528460020b60a084015280841660c084015250979650505050505050565b60208082526022908201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206d616e616760408201526132b960f11b606082015260800190565b6000808335601e1984360301811262001c44578283fd5b8301803591506001600160401b0382111562001c5e578283fd5b6020019150368190038213156200141857600080fd5b604051601f8201601f191681016001600160401b038111828210171562001c9f5762001c9f62001d54565b604052919050565b6000821982111562001cbd5762001cbd62001d3e565b500190565b60005b8381101562001cdf57818101518382015260200162001cc5565b83811115620005c25750506000910152565b600060001982141562001d085762001d0862001d3e565b5060010190565b60008260020b8062001d2f57634e487b7160e01b82526012600452602482fd5b808360020b0791505092915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462001d8057600080fd5b50565b8060020b811462001d8057600080fdfe60806040526040516109a53803806109a5833981016040819052610022916101a4565b61002c838261003d565b61003582610119565b5050506102ce565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610114576000836001600160a01b0316836040516100be9190610270565b600060405180830381855af49150503d80600081146100f9576040519150601f19603f3d011682016040523d82523d6000602084013e6100fe565b606091505b5050905080610112573d806000803e806000fd5b505b505050565b60006101316000805160206109858339815191525490565b90508160008051602061098583398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80516001600160a01b038116811461019f57600080fd5b919050565b6000806000606084860312156101b8578283fd5b6101c184610188565b92506101cf60208501610188565b60408501519092506001600160401b03808211156101eb578283fd5b818601915086601f8301126101fe578283fd5b815181811115610210576102106102b8565b604051601f8201601f19908116603f01168101908382118183101715610238576102386102b8565b81604052828152896020848701011115610250578586fd5b61026183602083016020880161028c565b80955050505050509250925092565b6000825161028281846020870161028c565b9190910192915050565b60005b838110156102a757818101518382015260200161028f565b838111156101125750506000910152565b634e487b7160e01b600052604160045260246000fd5b6106a8806102dd6000396000f3fe60806040526004361061004e5760003560e01c806301ffc9a71461009b5780633659cfe6146100d05780633e47158c146100f05780634f1ef2861461011d5780638356ca4f1461013057610091565b366100915760405162461bcd60e51b815260206004820152600e60248201526d115512115497d491529150d5115160921b60448201526064015b60405180910390fd5b610099610150565b005b3480156100a757600080fd5b506100bb6100b63660046105a9565b610189565b60405190151581526020015b60405180910390f35b3480156100dc57600080fd5b506100996100eb3660046104f2565b61027e565b3480156100fc57600080fd5b506101056102d2565b6040516001600160a01b0390911681526020016100c7565b61009961012b36600461050c565b6102e1565b34801561013c57600080fd5b5061009961014b3660046104f2565b61035e565b6000805160206106538339815191525460003681823780813683855af491503d8082833e82801561017f578183f35b8183fd5b50505050565b60006301ffc9a760e01b6001600160e01b0319831614806101ba57506307f5828d60e41b6001600160e01b03198316145b156101c757506001919050565b6001600160e01b031980831614156101e157506000919050565b600080516020610653833981519152546040516301ffc9a760e01b81526001600160e01b0319841660048201526001600160a01b038216906301ffc9a79060240160206040518083038186803b15801561023a57600080fd5b505afa92505050801561026a575060408051601f3d908101601f1916820190925261026791810190610589565b60015b6102775750600092915050565b9392505050565b61028661039f565b6001600160a01b0316336001600160a01b0316146102b65760405162461bcd60e51b81526004016100889061060a565b6102cf81604051806020016040528060008152506103b2565b50565b60006102dc61039f565b905090565b6102e961039f565b6001600160a01b0316336001600160a01b0316146103195760405162461bcd60e51b81526004016100889061060a565b6103598383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103b292505050565b505050565b61036661039f565b6001600160a01b0316336001600160a01b0316146103965760405162461bcd60e51b81526004016100889061060a565b6102cf81610475565b6000805160206106338339815191525490565b6000805160206106538339815191528054908390556040516001600160a01b0380851691908316907f5570d70a002632a7b0b3c9304cc89efb62d8da9eca0dbd7752c83b737906829690600090a3815115610359576000836001600160a01b03168360405161042191906105d1565b600060405180830381855af49150503d806000811461045c576040519150601f19603f3d011682016040523d82523d6000602084013e610461565b606091505b5050905080610183573d806000803e806000fd5b600061047f61039f565b90508160008051602061063383398151915255816001600160a01b0316816001600160a01b03167fdf435d422321da6b195902d70fc417c06a32f88379c20dd8f2a8da07088cec2960405160405180910390a35050565b80356001600160a01b03811681146104ed57600080fd5b919050565b600060208284031215610503578081fd5b610277826104d6565b600080600060408486031215610520578182fd5b610529846104d6565b925060208401356001600160401b0380821115610544578384fd5b818601915086601f830112610557578384fd5b813581811115610565578485fd5b876020828501011115610576578485fd5b6020830194508093505050509250925092565b60006020828403121561059a578081fd5b81518015158114610277578182fd5b6000602082840312156105ba578081fd5b81356001600160e01b031981168114610277578182fd5b60008251815b818110156105f157602081860181015185830152016105d7565b818111156105ff5782828501525b509190910192915050565b6020808252600e908201526d1393d517d055551213d49256915160921b60408201526060019056feb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220730effc08e7ae1c19f69ae08dd52de483b649ded49db9428e4ced9875431474364736f6c63430008040033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61038be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a264697066735822122088c8024b57a9ea364c515edf7cb3b8239ebcb8fcdc986d7e2b8e467f1b9b6a9864736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createManagedPool(address,address,uint24,uint16,int24,int24)": {
        "params": {
          "lowerTick": "initial lower bound of the Uniswap V3 position",
          "managerFee": "proportion of earned fees that go to pool manager in Basis Points",
          "tokenA": "one of the tokens in the uniswap pair",
          "tokenB": "the other token in the uniswap pair",
          "uniFee": "fee tier of the uniswap pair",
          "upperTick": "initial upper bound of the Uniswap V3 position"
        },
        "returns": {
          "pool": "the address of the newly created G-UNI pool (proxy)"
        }
      },
      "createPool(address,address,uint24,int24,int24)": {
        "params": {
          "lowerTick": "initial lower bound of the Uniswap V3 position",
          "tokenA": "one of the tokens in the uniswap pair",
          "tokenB": "the other token in the uniswap pair",
          "uniFee": "fee tier of the uniswap pair",
          "upperTick": "initial upper bound of the Uniswap V3 position"
        },
        "returns": {
          "pool": "the address of the newly created G-UNI pool (proxy)"
        }
      },
      "getDeployers()": {
        "returns": {
          "_0": "deployers the list of deployer addresses"
        }
      },
      "getGelatoPools()": {
        "returns": {
          "_0": "list of Gelato managed G-UNI pool addresses"
        }
      },
      "getPools(address)": {
        "params": {
          "deployer": "address that has potentially deployed G-UNI pools (can return empty array)"
        },
        "returns": {
          "_0": "pools the list of G-UNI pool addresses deployed by `deployer`"
        }
      },
      "getProxyAdmin(address)": {
        "params": {
          "pool": "address of the G-UNI pool"
        },
        "returns": {
          "_0": "address that controls the G-UNI implementation (has power to upgrade it)"
        }
      },
      "isPoolImmutable(address)": {
        "params": {
          "pool": "address of the G-UNI pool"
        },
        "returns": {
          "_0": "bool signaling if pool is immutable (true) or not (false)"
        }
      },
      "manager()": {
        "details": "Returns the address of the current manager."
      },
      "numDeployers()": {
        "returns": {
          "_0": "total number of G-UNI pool deployer addresses"
        }
      },
      "numPools()": {
        "returns": {
          "result": "total number of G-UNI pools deployed"
        }
      },
      "numPools(address)": {
        "params": {
          "deployer": "deployer address"
        },
        "returns": {
          "_0": "total number of G-UNI pools deployed by `deployer`"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without manager. It will not be possible to call `onlyManager` functions anymore. Can only be called by the current manager. NOTE: Renouncing ownership will leave the contract without an manager, thereby removing any functionality that is only available to the manager."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current manager."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createManagedPool(address,address,uint24,uint16,int24,int24)": {
        "notice": "createManagedPool creates a new instance of a G-UNI token on a specified UniswapV3Pool. The msg.sender is the initial manager of the pool and will forever be associated with the G-UNI pool as it's `deployer`"
      },
      "createPool(address,address,uint24,int24,int24)": {
        "notice": "createPool creates a new instance of a G-UNI token on a specified UniswapV3Pool. Here the manager role is immediately burned, however msg.sender will still forever be associated with the G-UNI pool as it's `deployer`"
      },
      "getDeployers()": {
        "notice": "getDeployers fetches all addresses that have deployed a G-UNI pool"
      },
      "getGelatoPools()": {
        "notice": "getGelatoPools gets all the G-UNI pools deployed by Gelato's default deployer address (since anyone can deploy and manage G-UNI pools)"
      },
      "getPools(address)": {
        "notice": "getPools fetches all the G-UNI pool addresses deployed by `deployer`"
      },
      "getProxyAdmin(address)": {
        "notice": "getProxyAdmin gets the current address who controls the underlying implementation of a G-UNI pool. For most all pools either this contract address or the zero address will be the proxyAdmin. If the admin is the zero address the pool's implementation is naturally no longer upgradable (no one owns the zero address)."
      },
      "isPoolImmutable(address)": {
        "notice": "isPoolImmutable checks if a certain G-UNI pool is \"immutable\" i.e. that the proxyAdmin is the zero address and thus the underlying implementation cannot be upgraded"
      },
      "numDeployers()": {
        "notice": "numDeployers counts the total number of G-UNI pool deployer addresses"
      },
      "numPools()": {
        "notice": "numPools counts the total number of G-UNI pools in existence"
      },
      "numPools(address)": {
        "notice": "numPools counts the total number of G-UNI pools deployed by `deployer`"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6789,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_manager",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 9,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 6257,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "poolImplementation",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 6259,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "gelatoDeployer",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 6262,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_deployers",
        "offset": 0,
        "slot": "3",
        "type": "t_struct(AddressSet)2355_storage"
      },
      {
        "astId": 6267,
        "contract": "contracts/GUniFactory.sol:GUniFactory",
        "label": "_pools",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(AddressSet)2355_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(AddressSet)2355_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EnumerableSet.AddressSet)",
        "numberOfBytes": "32",
        "value": "t_struct(AddressSet)2355_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)2355_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 2354,
            "contract": "contracts/GUniFactory.sol:GUniFactory",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)2080_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)2080_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 2075,
            "contract": "contracts/GUniFactory.sol:GUniFactory",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 2079,
            "contract": "contracts/GUniFactory.sol:GUniFactory",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}